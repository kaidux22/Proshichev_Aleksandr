{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserGet {\n  constructor(http) {\n    this.http = http;\n  }\n  GetUserData(num) {\n    return this.http.get('http://localhost:3000/userInfo/' + num);\n  }\n  GetUserNews(num) {\n    return this.http.post('http://localhost:3000/posts', {\n      \"content\": [num],\n      with: \"true\"\n    });\n  }\n  GetUsers() {\n    return this.http.get('http://localhost:3000/users/');\n  }\n  AddUser(user) {\n    return this.http.post('http://localhost:3000/addUser', {\n      data: user\n    });\n  }\n  EditUser(user) {\n    return this.http.post('http://localhost:3000/EditUser', {\n      data: user\n    });\n  }\n  static #_ = this.ɵfac = function UserGet_Factory(t) {\n    return new (t || UserGet)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserGet,\n    factory: UserGet.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserGet","constructor","http","GetUserData","num","get","GetUserNews","post","with","GetUsers","AddUser","user","data","EditUser","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/kaidux22/Desktop/git_work/Proshichev_Aleksandr/University/Web/social-network/Client/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from '@angular/common/http'\nimport { Observable, Subject } from \"rxjs\";\nimport { INews, IUser } from \"../models/interfaces\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserGet{\n\n    constructor(private http: HttpClient){}\n\n    GetUserData(num : string): Observable<IUser>{\n        return this.http.get<IUser>('http://localhost:3000/userInfo/' + num)\n    }\n\n    GetUserNews(num : string): Observable<INews[]>{\n        return this.http.post<INews[]>('http://localhost:3000/posts', {\"content\": [num], with : \"true\"})\n    }\n\n    GetUsers(): Observable<IUser[]>{\n        return this.http.get<IUser[]>('http://localhost:3000/users/')\n    }\n\n    AddUser(user: IUser): Observable<number>{\n        return this.http.post<number>('http://localhost:3000/addUser', {data : user})\n    }\n\n    EditUser(user: IUser): Observable<boolean>{\n        return this.http.post<boolean>('http://localhost:3000/EditUser', {data: user})\n    }\n}"],"mappings":";;AASA,OAAM,MAAOA,OAAO;EAEhBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAc;EAEtCC,WAAWA,CAACC,GAAY;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,iCAAiC,GAAGD,GAAG,CAAC;EACxE;EAEAE,WAAWA,CAACF,GAAY;IACpB,OAAO,IAAI,CAACF,IAAI,CAACK,IAAI,CAAU,6BAA6B,EAAE;MAAC,SAAS,EAAE,CAACH,GAAG,CAAC;MAAEI,IAAI,EAAG;IAAM,CAAC,CAAC;EACpG;EAEAC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAU,8BAA8B,CAAC;EACjE;EAEAK,OAAOA,CAACC,IAAW;IACf,OAAO,IAAI,CAACT,IAAI,CAACK,IAAI,CAAS,+BAA+B,EAAE;MAACK,IAAI,EAAGD;IAAI,CAAC,CAAC;EACjF;EAEAE,QAAQA,CAACF,IAAW;IAChB,OAAO,IAAI,CAACT,IAAI,CAACK,IAAI,CAAU,gCAAgC,EAAE;MAACK,IAAI,EAAED;IAAI,CAAC,CAAC;EAClF;EAAC,QAAAG,CAAA,G;qBAtBQd,OAAO,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAPnB,OAAO;IAAAoB,OAAA,EAAPpB,OAAO,CAAAqB,IAAA;IAAAC,UAAA,EAHJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}