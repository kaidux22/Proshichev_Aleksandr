{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserGet {\n  constructor(http) {\n    this.http = http;\n    this.user_id = 1;\n  }\n  GetUserData(num) {\n    console.log('http://localhost:3000/userInfo/' + num);\n    return this.http.get('http://localhost:3000/userInfo/' + num);\n  }\n  GetUserNews(num) {\n    return this.http.post('http://localhost:3000/posts', {\n      \"content\": [num],\n      with: \"true\"\n    });\n  }\n  GetUsers() {\n    return this.http.get('http://localhost:3000/users/');\n  }\n  SetUser(user_id) {\n    this.user_id = user_id;\n  }\n  AddUser(user) {\n    return this.http.post('http://localhost:3000/addUser/', {\n      data: user\n    });\n  }\n  static #_ = this.ɵfac = function UserGet_Factory(t) {\n    return new (t || UserGet)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserGet,\n    factory: UserGet.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserGet","constructor","http","user_id","GetUserData","num","console","log","get","GetUserNews","post","with","GetUsers","SetUser","AddUser","user","data","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/kaidux22/Desktop/git_work/Proshichev_Aleksandr/University/Web/social-network/Client/src/app/services/user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport {HttpClient} from '@angular/common/http'\nimport { Observable, Subject } from \"rxjs\";\nimport { INews, IUser } from \"../models/interfaces\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserGet{\n    public user_id : number = 1\n\n    constructor(private http: HttpClient){}\n\n    GetUserData(num : string): Observable<IUser>{\n        console.log('http://localhost:3000/userInfo/' + num)\n        return this.http.get<IUser>('http://localhost:3000/userInfo/' + num)\n    }\n\n    GetUserNews(num : string): Observable<INews[]>{\n        return this.http.post<INews[]>('http://localhost:3000/posts', {\"content\": [num], with : \"true\"})\n    }\n\n    GetUsers(): Observable<IUser[]>{\n        return this.http.get<IUser[]>('http://localhost:3000/users/')\n    }\n\n    SetUser(user_id: number): void{\n        this.user_id = user_id\n    }\n\n    AddUser(user: IUser): void{\n        return this.http.post('http://localhost:3000/addUser/', {data : user})\n    }\n}"],"mappings":";;AASA,OAAM,MAAOA,OAAO;EAGhBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,OAAO,GAAY,CAAC;EAEW;EAEtCC,WAAWA,CAACC,GAAY;IACpBC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAGF,GAAG,CAAC;IACpD,OAAO,IAAI,CAACH,IAAI,CAACM,GAAG,CAAQ,iCAAiC,GAAGH,GAAG,CAAC;EACxE;EAEAI,WAAWA,CAACJ,GAAY;IACpB,OAAO,IAAI,CAACH,IAAI,CAACQ,IAAI,CAAU,6BAA6B,EAAE;MAAC,SAAS,EAAE,CAACL,GAAG,CAAC;MAAEM,IAAI,EAAG;IAAM,CAAC,CAAC;EACpG;EAEAC,QAAQA,CAAA;IACJ,OAAO,IAAI,CAACV,IAAI,CAACM,GAAG,CAAU,8BAA8B,CAAC;EACjE;EAEAK,OAAOA,CAACV,OAAe;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EAEAW,OAAOA,CAACC,IAAW;IACf,OAAO,IAAI,CAACb,IAAI,CAACQ,IAAI,CAAC,gCAAgC,EAAE;MAACM,IAAI,EAAGD;IAAI,CAAC,CAAC;EAC1E;EAAC,QAAAE,CAAA,G;qBAxBQjB,OAAO,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAPtB,OAAO;IAAAuB,OAAA,EAAPvB,OAAO,CAAAwB,IAAA;IAAAC,UAAA,EAHJ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}